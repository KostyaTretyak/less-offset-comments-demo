{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/comment.service.ts","webpack:///src/app/comment.ts","webpack:///src/app/thread/thread.component.ts","webpack:///src/app/thread/thread.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","commentService","rootComment","comments","getComments","comment","userId","unshift","onSubmit","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","CommentsToTree","allCommentsFromDb","map","commentFromDb","commentId","parentId","children","fromUserId","CommentService","fakeId","commentsFromDb","reverse","getTree","RootComment","DemoComment","parent","ThreadComponent","forEach","updateOffset","child","unshiftComment","index","deleteComment","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { Comment } from 'less-offset-comments';\n\nimport { RootComment, DemoComment } from './comment';\nimport { CommentService } from './comment.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n  rootComment = new RootComment();\n  comments: Comment[] = [];\n\n  constructor(private commentService: CommentService) {}\n\n  ngOnInit() {\n    this.comments = this.commentService.getComments();\n  }\n\n  onSubmit() {\n    const comment = new DemoComment(this.rootComment.userId);\n    this.comments.unshift(comment);\n  }\n}\n","<h1>\n  This is a demo where <a target=\"_blank\" href=\"https://github.com/KostyaTretyak/less-offset-comments\">less-offset-comments</a> utility is used\n</h1>\n\n<p>\n  The demo was <a href=\"https://github.com/KostyaTretyak/less-offset-comments-demo\">written on Angular 9</a>.\n</p>\n\n<hr>\n<form style=\"margin-top: 50px;\">\n  <button (click)=\"onSubmit()\">Sumbit root comment</button>\n  as user:\n  <select [(ngModel)]=\"rootComment.userId\" name=\"userId\">\n    <option [value]=\"1\">1</option>\n    <option [value]=\"2\">2</option>\n    <option [value]=\"3\">3</option>\n    <option [value]=\"4\">4</option>\n  </select>\n</form>\n\n<div class=\"comment-container\">\n  <cst-thread [comments]=\"comments\"></cst-thread>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { ThreadComponent } from './thread/thread.component';\nimport { CommentService } from './comment.service';\n\n@NgModule({\n  declarations: [AppComponent, ThreadComponent],\n  imports: [BrowserModule, FormsModule],\n  providers: [CommentService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\nimport { Comment } from 'less-offset-comments';\nimport { DefaultCommentsToTree } from '@ts-stack/comments-to-tree';\n\nimport { CommentFromDb, CommentTree } from './comment';\n\nexport class CommentsToTree extends DefaultCommentsToTree {\n  protected static transform(allCommentsFromDb: CommentFromDb[]): CommentTree[] {\n    return allCommentsFromDb.map((commentFromDb) => {\n      return {\n        commentId: commentFromDb.commentId,\n        userId: commentFromDb.userId,\n        parentId: commentFromDb.parentId || 0,\n        children: [],\n        fromUserId: 1,\n      };\n    });\n  }\n}\n\n@Injectable()\nexport class CommentService {\n  private fakeId = 0;\n\n  private commentsFromDb: CommentFromDb[] = [\n    { userId: 1, commentId: ++this.fakeId },\n\n    { userId: 2, parentId: this.fakeId, commentId: ++this.fakeId },\n    { userId: 1, parentId: this.fakeId, commentId: ++this.fakeId },\n    { userId: 2, parentId: this.fakeId, commentId: ++this.fakeId },\n\n    { userId: 4, parentId: this.fakeId, commentId: ++this.fakeId },\n    { userId: 1, parentId: this.fakeId - 1, commentId: ++this.fakeId },\n\n    { userId: 2, parentId: this.fakeId, commentId: ++this.fakeId },\n    { userId: 1, parentId: this.fakeId, commentId: ++this.fakeId },\n    { userId: 2, parentId: this.fakeId, commentId: ++this.fakeId },\n    { userId: 1, parentId: this.fakeId, commentId: ++this.fakeId },\n    { userId: 2, parentId: this.fakeId, commentId: ++this.fakeId },\n    { userId: 1, parentId: this.fakeId, commentId: ++this.fakeId },\n    { userId: 2, parentId: this.fakeId, commentId: ++this.fakeId },\n\n    { userId: 3, parentId: this.fakeId, commentId: ++this.fakeId },\n    { userId: 2, parentId: this.fakeId, commentId: ++this.fakeId },\n    { userId: 3, parentId: this.fakeId, commentId: ++this.fakeId },\n    { userId: 2, parentId: this.fakeId, commentId: ++this.fakeId },\n  ];\n\n  getComments(): Comment[] {\n    // This is only for the demo, in real life reverse direct should come from database.\n    this.commentsFromDb.reverse();\n\n    return CommentsToTree.getTree<CommentFromDb, CommentTree>(this.commentsFromDb);\n  }\n}\n","import { Comment } from 'less-offset-comments';\nimport { DefaultCommentFromDb, DefaultComment, DefaultCommentsToTree } from '@ts-stack/comments-to-tree';\n\nexport class RootComment\n{\n  public userId: number = 1;\n}\n\nexport class DemoComment\n{\n  /**\n   * `true` if user want delete comment.\n   */\n  wantDel: boolean;\n\n  constructor\n  (\n    public userId: number,\n    public parent: DemoComment = null,\n    public children: DemoComment[] = [],\n    /**\n     * Needs only for demo.\n     */\n    public fromUserId: number = 1,\n  ){}\n}\n\nexport interface CommentFromDb extends DefaultCommentFromDb\n{\n  userId: number;\n}\n\nexport interface CommentTree extends DefaultComment, Comment {}\n","import { Component, OnInit, Input } from '@angular/core';\n\nimport { LessOffsetComments } from 'less-offset-comments';\n\nimport { DemoComment } from '../comment';\n\n@Component({\n  selector: 'cst-thread',\n  templateUrl: './thread.component.html',\n  styleUrls: ['./thread.component.css'],\n})\nexport class ThreadComponent implements OnInit {\n  @Input() comments: DemoComment[];\n\n  ngOnInit() {\n    if (this.comments) {\n      this.comments.forEach((comment) => LessOffsetComments.updateOffset(comment));\n    }\n  }\n\n  onSubmit(parent: DemoComment) {\n    const child = new DemoComment(+parent.fromUserId, parent);\n\n    LessOffsetComments.unshiftComment(parent, child);\n  }\n\n  onDelete(comment: DemoComment, index: number) {\n    LessOffsetComments.deleteComment(this.comments, comment, index);\n  }\n}\n","<div *ngFor=\"let comment of comments; index as index\" [ngClass]=\"{'offset-comment': comment.hasOffset}\">\n  <div class=\"demo-comment user-id-{{ comment.userId }}\">\n    <div class=\"avatar\">\n      <img class=\"ava-30\" src=\"./assets/img/ava.jpg\">\n    </div>\n    <div class=\"demo-content\">\n      user{{ comment.userId }}\n    </div>\n    <br>\n    <button *ngIf=\"comment.children.length\" (click)=\"comment.wantDel = true\">Delete</button>\n    <button *ngIf=\"!comment.children.length\" (click)=\"onDelete(comment, index)\">Delete</button>\n    <span *ngIf=\"comment.wantDel\" style=\"color: brown\">\n      Are you sure you want to delete this comment and all its child comments?\n      <button (click)=\"onDelete(comment, index)\">OK</button>\n      <button (click)=\"comment.wantDel = false\">Cancel</button>\n    </span>\n    <ng-container *ngIf=\"!comment.wantDel\">\n      <button (click)=\"onSubmit(comment)\">Reply</button>\n      as user:\n      <select [(ngModel)]=\"comment.fromUserId\" name=\"fromUserId\">\n        <option [value]=\"1\">1</option>\n        <option [value]=\"2\">2</option>\n        <option [value]=\"3\">3</option>\n        <option [value]=\"4\">4</option>\n      </select>\n    </ng-container>\n  </div>\n  <cst-thread [comments]=\"comment.children\"></cst-thread>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}